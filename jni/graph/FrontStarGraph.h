/* DO NOT EDIT THIS FILE - it is machine generated */
#include "../global/functions.h"
/* Header for class org_algo4j_graph_FrontStarGraph */

#pragma clang diagnostic push
#pragma ide diagnostic ignored "OCUnusedGlobalDeclarationInspection"

#ifndef _Included_org_algo4j_graph_FrontStarGraph
#define _Included_org_algo4j_graph_FrontStarGraph

#undef FrontStarGraph_INFINITY
#define FrontStarGraph_INFINITY 2147483647L

#undef org_algo4j_graph_FrontStarGraph_INFINITY_FILLING
#define org_algo4j_graph_FrontStarGraph_INFINITY_FILLING 127L

#ifdef __cplusplus
extern "C" {
#endif /// __cplusplus

/**
 * Class:     org_algo4j_graph_FrontStarGraph
 * Method:    spfa
 * Signature: (I[I[I[I[III)[I
 */
JNIEXPORT auto JNICALL Java_org_algo4j_graph_FrontStarGraph_spfa(
		JNIEnv *,
		jobject,
		jint,
		jintArray,
		jintArray,
		jintArray,
		jintArray,
		jint,
		jint
) -> jintArray;

/**
 * Class:     org_algo4j_graph_FrontStarGraph
 * Method:    kruskal
 * Signature: ([I[I[I[I[III)[I
 */
JNIEXPORT auto JNICALL Java_org_algo4j_graph_FrontStarGraph_kruskal(
		JNIEnv *,
		jobject,
		jintArray,
		jintArray,
		jintArray,
		jintArray,
		jintArray,
		jint,
		jint
) -> jintArray;

/**
 * Class:     org_algo4j_graph_FrontStarGraph
 * Method:    bellmanFord
 * Signature: (I[I[I[III)[I
 */
JNIEXPORT auto JNICALL Java_org_algo4j_graph_FrontStarGraph_bellmanFord(
		JNIEnv *,
		jobject,
		jint,
		jintArray,
		jintArray,
		jintArray,
		jint,
		jint
) -> jintArray;

namespace algo4j_front_star {
	class FrontStarNode {
	public:
		jint value;
		jint to;
		jint from;

		constexpr FrontStarNode(const jint v, const jint t, const jint f) : value(v), to(t), from(f) { }

		explicit FrontStarNode() { }

		~FrontStarNode() { }

		/**
		 * set values of fields
		 */
		inline auto setValue(const jint v, const jint t, const jint f) -> void {
			value = v;
			from = f;
			to = t;
		}

		/**
		 * used for sorting
		 */
		inline auto operator<(const FrontStarNode &o) const -> const bool {
			return value < o.value;
		}

		inline auto operator==(const FrontStarNode &o) const -> const bool {
			return value == o.value;
		}
	};
}

#ifdef __cplusplus
}
#endif /// __cplusplus
#endif /// org_algo4j_graph_FrontStarGraph

#pragma clang diagnostic pop
